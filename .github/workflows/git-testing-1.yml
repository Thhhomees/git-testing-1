name: git-testing-1

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs: 
      parameter1: 
        description: 'parameter1'
        required: true
        type: string
      parameter2: 
        description: 'parameter2'
        required: true
        type: boolean

permissions: read-all

jobs:
  linux-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: git-testing-1 Location
        run: |
          cd $GITHUB_WORKSPACE
          ls

      - name: Environment Variables
        run: |
          echo "CI: $CI"
          echo "GITHUB_ACTION: $GITHUB_ACTION"
          echo "GITHUB_ACTION_PATH: $GITHUB_ACTION_PATH"
          echo "GITHUB_ACTION_REPOSITORY: $GITHUB_ACTION_REPOSITORY"
          echo "GITHUB_ACTIONS: $GITHUB_ACTIONS"
          echo "GITHUB_ACTOR: $GITHUB_ACTOR"
          echo "GITHUB_ACTOR_ID: $GITHUB_ACTOR_ID"
          echo "GITHUB_API_URL: $GITHUB_API_URL"
          echo "GITHUB_BASE_REF: $GITHUB_BASE_REF"
          echo "GITHUB_ENV: $GITHUB_ENV"
          echo "GITHUB_EVENT_NAME: $GITHUB_EVENT_NAME"
          echo "GITHUB_EVENT_PATH: $GITHUB_EVENT_PATH"
          echo "GITHUB_GRAPHQL_URL: $GITHUB_GRAPHQL_URL"
          echo "GITHUB_HEAD_REF: $GITHUB_HEAD_REF"
          echo "GITHUB_JOB: $GITHUB_JOB"
          echo "GITHUB_OUTPUT: $GITHUB_OUTPUT"
          echo "GITHUB_PATH: $GITHUB_PATH"
          echo "GITHUB_REF: $GITHUB_REF"
          echo "GITHUB_REF_NAME: $GITHUB_REF_NAME"
          echo "GITHUB_REF_PROTECTED: $GITHUB_REF_PROTECTED"
          echo "GITHUB_REF_TYPE: $GITHUB_REF_TYPE"
          echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
          echo "GITHUB_REPOSITORY_ID: $GITHUB_REPOSITORY_ID"
          echo "GITHUB_REPOSITORY_OWNER: $GITHUB_REPOSITORY_OWNER"
          echo "GITHUB_REPOSITORY_OWNER_ID: $GITHUB_REPOSITORY_OWNER_ID"
          echo "GITHUB_RETENTION_DAYS: $GITHUB_RETENTION_DAYS"
          echo "GITHUB_RUN_ATTEMPT: $GITHUB_RUN_ATTEMPT"
          echo "GITHUB_RUN_ID: $GITHUB_RUN_ID"
          echo "GITHUB_RUN_NUMBER: $GITHUB_RUN_NUMBER"
          echo "GITHUB_SERVER_URL: $GITHUB_SERVER_URL"
          echo "GITHUB_SHA: $GITHUB_SHA"
          echo "GITHUB_STEP_SUMMARY: $GITHUB_STEP_SUMMARY"
          echo "GITHUB_TRIGGERING_ACTOR: $GITHUB_TRIGGERING_ACTOR"
          echo "GITHUB_WORKFLOW: $GITHUB_WORKFLOW"
          echo "GITHUB_WORKFLOW_REF: $GITHUB_WORKFLOW_REF"
          echo "GITHUB_WORKFLOW_SHA: $GITHUB_WORKFLOW_SHA"
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          echo "RUNNER_ARCH: $RUNNER_ARCH"
          echo "RUNNER_DEBUG: $RUNNER_DEBUG"
          echo "RUNNER_ENVIRONMENT: $RUNNER_ENVIRONMENT"
          echo "RUNNER_NAME: $RUNNER_NAME"
          echo "RUNNER_OS: $RUNNER_OS"
          echo "RUNNER_TEMP: $RUNNER_TEMP"
          echo "RUNNER_TOOL_CACHE: $RUNNER_TOOL_CACHE"

      - name: Print Parameters
        run: |
          echo "Parameter 1: ${{ github.event.inputs.parameter1 }}"
          echo "Parameter 2: ${{ github.event.inputs.parameter2 }}"


  windows-test:
    needs: linux-test
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: git-testing-1 Location
        shell: pwsh
        run: |
          cd $env:GITHUB_WORKSPACE    # = cd ${{ github.workspace }}
          ls

      - name: Environment Variables
        shell: pwsh
        run: |
          Write-Host "CI: $env:CI"
          Write-Host "GITHUB_ACTION: $env:GITHUB_ACTION"
          Write-Host "GITHUB_ACTION_PATH: $env:GITHUB_ACTION_PATH"
          Write-Host "GITHUB_ACTION_REPOSITORY: $env:GITHUB_ACTION_REPOSITORY"
          Write-Host "GITHUB_ACTIONS: $env:GITHUB_ACTIONS"
          Write-Host "GITHUB_ACTOR: $env:GITHUB_ACTOR"
          Write-Host "GITHUB_ACTOR_ID: $env:GITHUB_ACTOR_ID"
          Write-Host "GITHUB_API_URL: $env:GITHUB_API_URL"
          Write-Host "GITHUB_BASE_REF: $env:GITHUB_BASE_REF"
          Write-Host "GITHUB_ENV: $env:GITHUB_ENV"
          Write-Host "GITHUB_EVENT_NAME: $env:GITHUB_EVENT_NAME"
          Write-Host "GITHUB_EVENT_PATH: $env:GITHUB_EVENT_PATH"
          Write-Host "GITHUB_GRAPHQL_URL: $env:GITHUB_GRAPHQL_URL"
          Write-Host "GITHUB_HEAD_REF: $env:GITHUB_HEAD_REF"
          Write-Host "GITHUB_JOB: $env:GITHUB_JOB"
          Write-Host "GITHUB_OUTPUT: $env:GITHUB_OUTPUT"
          Write-Host "GITHUB_PATH: $env:GITHUB_PATH"
          Write-Host "GITHUB_REF: $env:GITHUB_REF"
          Write-Host "GITHUB_REF_NAME: $env:GITHUB_REF_NAME"
          Write-Host "GITHUB_REF_PROTECTED: $env:GITHUB_REF_PROTECTED"
          Write-Host "GITHUB_REF_TYPE: $env:GITHUB_REF_TYPE"
          Write-Host "GITHUB_REPOSITORY: $env:GITHUB_REPOSITORY"
          Write-Host "GITHUB_REPOSITORY_ID: $env:GITHUB_REPOSITORY_ID"
          Write-Host "GITHUB_REPOSITORY_OWNER: $env:GITHUB_REPOSITORY_OWNER"
          Write-Host "GITHUB_REPOSITORY_OWNER_ID: $env:GITHUB_REPOSITORY_OWNER_ID"
          Write-Host "GITHUB_RETENTION_DAYS: $env:GITHUB_RETENTION_DAYS"
          Write-Host "GITHUB_RUN_ATTEMPT: $env:GITHUB_RUN_ATTEMPT"
          Write-Host "GITHUB_RUN_ID: $env:GITHUB_RUN_ID"
          Write-Host "GITHUB_RUN_NUMBER: $env:GITHUB_RUN_NUMBER"
          Write-Host "GITHUB_SERVER_URL: $env:GITHUB_SERVER_URL"
          Write-Host "GITHUB_SHA: $env:GITHUB_SHA"
          Write-Host "GITHUB_STEP_SUMMARY: $env:GITHUB_STEP_SUMMARY"
          Write-Host "GITHUB_TRIGGERING_ACTOR: $env:GITHUB_TRIGGERING_ACTOR"
          Write-Host "GITHUB_WORKFLOW: $env:GITHUB_WORKFLOW"
          Write-Host "GITHUB_WORKFLOW_REF: $env:GITHUB_WORKFLOW_REF"
          Write-Host "GITHUB_WORKFLOW_SHA: $env:GITHUB_WORKFLOW_SHA"
          Write-Host "GITHUB_WORKSPACE: $env:GITHUB_WORKSPACE"
          Write-Host "RUNNER_ARCH: $env:RUNNER_ARCH"
          Write-Host "RUNNER_DEBUG: $env:RUNNER_DEBUG"
          Write-Host "RUNNER_ENVIRONMENT: $env:RUNNER_ENVIRONMENT"
          Write-Host "RUNNER_NAME: $env:RUNNER_NAME"
          Write-Host "RUNNER_OS: $env:RUNNER_OS"
          Write-Host "RUNNER_TEMP: $env:RUNNER_TEMP"
          Write-Host "RUNNER_TOOL_CACHE: $env:RUNNER_TOOL_CACHE"

      - name: Secrets & Variables
        shell: pwsh
        run: |
          Write-Host "Secret: ${{ secrets.GH1_SECRET }}"
          Write-Host "Variable: ${{ vars.GH1_VARIABLE }}"


  new-test-1:
    runs-on: ubuntu-latest
    environment: test-environment-1
    steps:
      - name: Fetch approvals and set env vars
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh api repos/$GITHUB_REPOSITORY/actions/runs/15783941267/approvals
        
          read -r approver_login approver_comment < <(
            gh api repos/$GITHUB_REPOSITORY/actions/runs/15783941267/approvals \
              --jq '
                .[]
                | select(any(.environments[]; .name == "test-environment-1"))
                | .user.login, .comment
              '
          )
          echo "APPROVER_LOGIN=$approver_login" >> $GITHUB_ENV
          echo "APPROVER_COMMENT=$approver_comment" >> $GITHUB_ENV

      - name: Use the variables
        run: |
          echo "Login saved: $APPROVER_LOGIN"
          echo "Comment saved: $APPROVER_COMMENT"


  new-test-2:
    runs-on: ubuntu-latest
    needs: new-test-1
    environment: test-environment-2
    steps:
      - name: Get environment name
        shell: bash
        run: |
          gh api repos/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID/approvals | \
          jq -r --arg env "test-environment-1" 'first(.[] | select(any(.environments[]; .name == $env)) | .comment'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}